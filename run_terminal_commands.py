#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ —á–µ—Ä–µ–∑ Python
–û–±—Ö–æ–¥–∏—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–º Cursor
"""

import subprocess
import sys
import os
from pathlib import Path

def run_command(command, cwd=None, shell=True):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    if cwd is None:
        cwd = Path.cwd()
    
    print(f"üîß –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É: {command}")
    print(f"üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {cwd}")
    print("=" * 50)
    
    try:
        result = subprocess.run(
            command,
            shell=shell,
            cwd=cwd,
            capture_output=True,
            text=True,
            timeout=30
        )
        
        if result.stdout:
            print("üì§ –í—ã–≤–æ–¥:")
            print(result.stdout)
        
        if result.stderr:
            print("‚ö†Ô∏è –û—à–∏–±–∫–∏:")
            print(result.stderr)
        
        print(f"‚úÖ –ö–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {result.returncode}")
        return result.returncode == 0
        
    except subprocess.TimeoutExpired:
        print("‚è∞ –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–≤—ã—Å–∏–ª–∞ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è (30 —Å–µ–∫)")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python run_terminal_commands.py <–∫–æ–º–∞–Ω–¥–∞>")
        print("–ü—Ä–∏–º–µ—Ä—ã:")
        print("  python run_terminal_commands.py 'git status'")
        print("  python run_terminal_commands.py 'python --version'")
        print("  python run_terminal_commands.py 'dir'")
        return
    
    command = " ".join(sys.argv[1:])
    success = run_command(command)
    
    if success:
        print("üéâ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("üí• –ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π!")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == "__main__":
    main()
