#!/usr/bin/env python3
"""–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç"""


def add_crypto_demo_data():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç"""
    print("üöÄ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç...")

    try:
        from datetime import datetime, timedelta

        from app.core.models import TransactionIn
        from app.core.services import add_transaction

        # –î–µ–º–æ-—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
        demo_transactions = [
            TransactionIn(
                coin="BTC",
                type="buy",
                quantity=0.1,
                price=45000.00,
                source="Binance",
                strategy="long",
                notes="–ü–æ–∫—É–ø–∫–∞ Bitcoin",
            ),
            TransactionIn(
                coin="ETH",
                type="buy",
                quantity=2.0,
                price=3000.00,
                source="Coinbase",
                strategy="long",
                notes="–ü–æ–∫—É–ø–∫–∞ Ethereum",
            ),
            TransactionIn(
                coin="SOL",
                type="buy",
                quantity=50.0,
                price=100.00,
                source="Binance",
                strategy="long",
                notes="–ü–æ–∫—É–ø–∫–∞ Solana",
            ),
            TransactionIn(
                coin="ADA",
                type="buy",
                quantity=1000.0,
                price=0.50,
                source="Kraken",
                strategy="long",
                notes="–ü–æ–∫—É–ø–∫–∞ Cardano",
            ),
            TransactionIn(
                coin="DOT",
                type="buy",
                quantity=100.0,
                price=25.00,
                source="Binance",
                strategy="long",
                notes="–ü–æ–∫—É–ø–∫–∞ Polkadot",
            ),
        ]

        added_count = 0
        for tx in demo_transactions:
            try:
                success = add_transaction(tx)
                if success:
                    added_count += 1
                    print(
                        f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: {tx.coin} - {tx.quantity} –ø–æ ${tx.price}"
                    )
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {tx.coin}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è {tx.coin}: {e}")

        print(f"\nüéâ –î–æ–±–∞–≤–ª–µ–Ω–æ {added_count} –¥–µ–º–æ-—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç!")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        from app.core.services import get_portfolio_stats

        stats = get_portfolio_stats()
        print(f"üìä –¢–µ–ø–µ—Ä—å –ø–æ–∑–∏—Ü–∏–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç: {len(stats.get('positions', []))}")
        print(f"üìä –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {stats.get('total_transactions', 0)}")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback

        traceback.print_exc()
        return False


if __name__ == "__main__":
    add_crypto_demo_data()
