#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
from datetime import datetime, timedelta
from decimal import Decimal

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from sqlmodel import Session, select

from app.core.models import Transaction
from app.storage.db import engine


def add_test_transactions():
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

    with Session(engine) as session:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        existing = session.exec(select(Transaction)).first()
        if existing:
            print(
                "‚ùå –í –±–∞–∑–µ —É–∂–µ –µ—Å—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö."
            )
            return

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        test_transactions = [
            # Bitcoin —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
            Transaction(
                symbol="BTC",
                transaction_type="buy",
                amount=Decimal("0.5"),
                price=Decimal("45000.00"),
                timestamp=datetime.now() - timedelta(days=30),
                notes="–ü–æ–∫—É–ø–∫–∞ Bitcoin –Ω–∞ –º–∏–Ω–∏–º—É–º–µ",
            ),
            Transaction(
                symbol="BTC",
                transaction_type="buy",
                amount=Decimal("0.3"),
                price=Decimal("48000.00"),
                timestamp=datetime.now() - timedelta(days=20),
                notes="–î–æ–∫—É–ø–∫–∞ Bitcoin",
            ),
            Transaction(
                symbol="BTC",
                transaction_type="sell",
                amount=Decimal("0.2"),
                price=Decimal("52000.00"),
                timestamp=datetime.now() - timedelta(days=10),
                notes="–ß–∞—Å—Ç–∏—á–Ω–∞—è –ø—Ä–æ–¥–∞–∂–∞ Bitcoin",
            ),
            # Ethereum —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
            Transaction(
                symbol="ETH",
                transaction_type="buy",
                amount=Decimal("2.0"),
                price=Decimal("3200.00"),
                timestamp=datetime.now() - timedelta(days=25),
                notes="–ü–æ–∫—É–ø–∫–∞ Ethereum",
            ),
            Transaction(
                symbol="ETH",
                transaction_type="buy",
                amount=Decimal("1.5"),
                price=Decimal("2800.00"),
                timestamp=datetime.now() - timedelta(days=15),
                notes="–î–æ–∫—É–ø–∫–∞ Ethereum –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏",
            ),
            # Cardano —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
            Transaction(
                symbol="ADA",
                transaction_type="buy",
                amount=Decimal("1000"),
                price=Decimal("0.45"),
                timestamp=datetime.now() - timedelta(days=40),
                notes="–ü–æ–∫—É–ø–∫–∞ Cardano",
            ),
            Transaction(
                symbol="ADA",
                transaction_type="buy",
                amount=Decimal("500"),
                price=Decimal("0.38"),
                timestamp=datetime.now() - timedelta(days=35),
                notes="–î–æ–∫—É–ø–∫–∞ Cardano",
            ),
            # Solana —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
            Transaction(
                symbol="SOL",
                transaction_type="buy",
                amount=Decimal("10"),
                price=Decimal("95.00"),
                timestamp=datetime.now() - timedelta(days=20),
                notes="–ü–æ–∫—É–ø–∫–∞ Solana",
            ),
            Transaction(
                symbol="SOL",
                transaction_type="sell",
                amount=Decimal("3"),
                price=Decimal("110.00"),
                timestamp=datetime.now() - timedelta(days=5),
                notes="–ß–∞—Å—Ç–∏—á–Ω–∞—è –ø—Ä–æ–¥–∞–∂–∞ Solana",
            ),
            # Polkadot —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
            Transaction(
                symbol="DOT",
                transaction_type="buy",
                amount=Decimal("50"),
                price=Decimal("6.80"),
                timestamp=datetime.now() - timedelta(days=45),
                notes="–ü–æ–∫—É–ø–∫–∞ Polkadot",
            ),
            Transaction(
                symbol="DOT",
                transaction_type="buy",
                amount=Decimal("30"),
                price=Decimal("5.20"),
                timestamp=datetime.now() - timedelta(days=30),
                notes="–î–æ–∫—É–ø–∫–∞ Polkadot",
            ),
            # Chainlink —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
            Transaction(
                symbol="LINK",
                transaction_type="buy",
                amount=Decimal("100"),
                price=Decimal("12.50"),
                timestamp=datetime.now() - timedelta(days=35),
                notes="–ü–æ–∫—É–ø–∫–∞ Chainlink",
            ),
            Transaction(
                symbol="LINK",
                transaction_type="buy",
                amount=Decimal("50"),
                price=Decimal("10.80"),
                timestamp=datetime.now() - timedelta(days=25),
                notes="–î–æ–∫—É–ø–∫–∞ Chainlink",
            ),
            # Uniswap —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
            Transaction(
                symbol="UNI",
                transaction_type="buy",
                amount=Decimal("200"),
                price=Decimal("4.20"),
                timestamp=datetime.now() - timedelta(days=28),
                notes="–ü–æ–∫—É–ø–∫–∞ Uniswap",
            ),
            Transaction(
                symbol="UNI",
                transaction_type="sell",
                amount=Decimal("50"),
                price=Decimal("5.80"),
                timestamp=datetime.now() - timedelta(days=8),
                notes="–ß–∞—Å—Ç–∏—á–Ω–∞—è –ø—Ä–æ–¥–∞–∂–∞ Uniswap",
            ),
        ]

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–∞–∑—É
        for transaction in test_transactions:
            session.add(transaction)

        session.commit()
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(test_transactions)} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π")
        print("\nüìä –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–∫–ª—é—á–∞—é—Ç:")
        print("   ‚Ä¢ Bitcoin (BTC) - 3 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
        print("   ‚Ä¢ Ethereum (ETH) - 2 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
        print("   ‚Ä¢ Cardano (ADA) - 2 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
        print("   ‚Ä¢ Solana (SOL) - 2 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
        print("   ‚Ä¢ Polkadot (DOT) - 2 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
        print("   ‚Ä¢ Chainlink (LINK) - 2 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
        print("   ‚Ä¢ Uniswap (UNI) - 2 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
        print("\nüéØ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!")


if __name__ == "__main__":
    add_test_transactions()
