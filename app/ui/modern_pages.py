"""
–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è Crypto Portfolio Manager

ARCHIVED UI: –≠—Ç–æ—Ç –º–æ–¥—É–ª—å –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π UI.
–ê–∫—Ç—É–∞–ª—å–Ω—ã–π UI: app/ui/pages_step2.py
–î–∞—Ç–∞ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏: 2025-09-22
"""

import os
from nicegui import ui
from app.core.models import TransactionIn
from app.core.services import (
    add_transaction,
    delete_transaction,
    enrich_positions_with_market,
    export_positions_csv,
    export_transactions_csv,
    get_portfolio_stats,
    get_transaction,
    get_transaction_stats,
    list_transactions,
    positions_fifo,
    update_transaction,
)
from app.ui.layout_improvements import (
    create_modern_dialog,
    create_modern_form_field,
    create_modern_table,
    create_success_toast,
    create_error_toast,
    create_info_toast,
)

CURRENCY = os.getenv("REPORT_CURRENCY", "USD").upper()
TYPES = ["buy", "sell", "exchange_in", "exchange_out", "deposit", "withdrawal"]
STRATS = ["long", "mid", "short", "scalp"]

# –ò–∫–æ–Ω–∫–∏ –¥–ª—è —Ç–∏–ø–æ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
TYPE_ICONS = {
    "buy": "üìà",
    "sell": "üìâ", 
    "exchange_in": "‚ÜóÔ∏è",
    "exchange_out": "‚ÜòÔ∏è",
    "deposit": "üí∞",
    "withdrawal": "üí∏",
}

# –ò–∫–æ–Ω–∫–∏ –¥–ª—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
STRATEGY_ICONS = {"long": "ü¶Ö", "mid": "‚öñÔ∏è", "short": "‚ö°", "scalp": "üéØ"}


def create_overview_page():
    """–°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–±–∑–æ—Ä–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è"""
    with ui.column().classes("w-full space-y-6"):
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        with ui.row().classes("items-center justify-between"):
            ui.label("–û–±–∑–æ—Ä –ø–æ—Ä—Ç—Ñ–µ–ª—è").classes("text-3xl font-bold text-gray-800")
            with ui.button("–û–±–Ω–æ–≤–∏—Ç—å", icon="refresh").classes(
                "bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-lg"
            ):
                pass
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        with ui.row().classes("gap-6 mb-8"):
            create_portfolio_stat_card("–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å", "$0.00", "üí∞", "primary")
            create_portfolio_stat_card("–î–Ω–µ–≤–Ω–æ–π PnL", "+$0.00", "üìà", "success")
            create_portfolio_stat_card("–ù–µ—Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π PnL", "+$0.00", "üíé", "info")
            create_portfolio_stat_card("–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π PnL", "+$0.00", "‚úÖ", "warning")
        
        # –ì—Ä–∞—Ñ–∏–∫–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
        with ui.row().classes("gap-6"):
            # –ì—Ä–∞—Ñ–∏–∫ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è
            with ui.card().classes("flex-1 p-6 bg-white shadow-sm rounded-lg"):
                ui.label("–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—è").classes("text-lg font-semibold text-gray-800 mb-4")
                with ui.row().classes("h-64 items-center justify-center bg-gray-50 rounded-lg"):
                    ui.label("–ì—Ä–∞—Ñ–∏–∫ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").classes("text-gray-500")
            
            # –¢–æ–ø –ø–æ–∑–∏—Ü–∏–∏
            with ui.card().classes("flex-1 p-6 bg-white shadow-sm rounded-lg"):
                ui.label("–¢–æ–ø –ø–æ–∑–∏—Ü–∏–∏").classes("text-lg font-semibold text-gray-800 mb-4")
                with ui.column().classes("space-y-3"):
                    for i in range(3):
                        with ui.row().classes("items-center justify-between p-3 bg-gray-50 rounded-lg"):
                            ui.label(f"–ü–æ–∑–∏—Ü–∏—è {i+1}").classes("font-medium text-gray-700")
                            ui.label("$0.00").classes("text-green-600 font-semibold")


def create_positions_page():
    """–°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∑–∏—Ü–∏–π"""
    with ui.column().classes("w-full space-y-6"):
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã
        with ui.row().classes("items-center justify-between"):
            ui.label("–ü–æ–∑–∏—Ü–∏–∏").classes("text-3xl font-bold text-gray-800")
            with ui.row().classes("items-center space-x-3"):
                with ui.select(["–í—Å–µ –º–æ–Ω–µ—Ç—ã", "BTC", "ETH", "SOL"]).classes(
                    "w-40 p-2 border border-gray-300 rounded-lg"
                ):
                    pass
                with ui.button("–≠–∫—Å–ø–æ—Ä—Ç", icon="download").classes(
                    "bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg"
                ):
                    pass
        
        # –¢–∞–±–ª–∏—Ü–∞ –ø–æ–∑–∏—Ü–∏–π
        with ui.card().classes("w-full p-6 bg-white shadow-sm rounded-lg"):
            columns = [
                {"name": "coin", "label": "–ú–æ–Ω–µ—Ç–∞", "field": "coin", "sortable": True},
                {"name": "strategy", "label": "–°—Ç—Ä–∞—Ç–µ–≥–∏—è", "field": "strategy", "sortable": True},
                {"name": "quantity", "label": "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", "field": "quantity", "sortable": True},
                {"name": "avg_cost", "label": "–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞", "field": "avg_cost", "sortable": True},
                {"name": "current_price", "label": "–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞", "field": "current_price", "sortable": True},
                {"name": "value", "label": "–°—Ç–æ–∏–º–æ—Å—Ç—å", "field": "value", "sortable": True},
                {"name": "pnl", "label": "PnL", "field": "pnl", "sortable": True},
                {"name": "pnl_pct", "label": "PnL %", "field": "pnl_pct", "sortable": True},
            ]
            
            table = create_modern_table(columns, [])
            
            # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø—É—Å—Ç–æ–π —Ç–∞–±–ª–∏—Ü—ã
            with ui.row().classes("h-64 items-center justify-center"):
                ui.label("–ù–µ—Ç –ø–æ–∑–∏—Ü–∏–π").classes("text-gray-500 text-lg")


def create_transactions_page():
    """–°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–¥–µ–ª–æ–∫"""
    with ui.column().classes("w-full space-y-6"):
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –¥–µ–π—Å—Ç–≤–∏—è
        with ui.row().classes("items-center justify-between"):
            ui.label("–°–¥–µ–ª–∫–∏").classes("text-3xl font-bold text-gray-800")
            with ui.row().classes("items-center space-x-3"):
                with ui.button("–î–æ–±–∞–≤–∏—Ç—å —Å–¥–µ–ª–∫—É", icon="add").classes(
                    "bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-lg"
                ).on_click(lambda: open_add_transaction_dialog()):
                    pass
                with ui.button("–≠–∫—Å–ø–æ—Ä—Ç", icon="download").classes(
                    "bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg"
                ):
                    pass
        
        # –§–∏–ª—å—Ç—Ä—ã
        with ui.card().classes("w-full p-4 bg-white shadow-sm rounded-lg"):
            with ui.row().classes("items-center space-x-4"):
                create_modern_form_field("–ú–æ–Ω–µ—Ç–∞", "select", options=["–í—Å–µ", "BTC", "ETH", "SOL"])
                create_modern_form_field("–¢–∏–ø", "select", options=["–í—Å–µ", "–ü–æ–∫—É–ø–∫–∞", "–ü—Ä–æ–¥–∞–∂–∞"])
                create_modern_form_field("–°—Ç—Ä–∞—Ç–µ–≥–∏—è", "select", options=["–í—Å–µ", "Long", "Mid", "Short", "Scalp"])
                with ui.button("–ü—Ä–∏–º–µ–Ω–∏—Ç—å", icon="filter_list").classes(
                    "bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-lg"
                ):
                    pass
        
        # –¢–∞–±–ª–∏—Ü–∞ —Å–¥–µ–ª–æ–∫
        with ui.card().classes("w-full p-6 bg-white shadow-sm rounded-lg"):
            columns = [
                {"name": "id", "label": "ID", "field": "id", "sortable": True},
                {"name": "coin", "label": "–ú–æ–Ω–µ—Ç–∞", "field": "coin", "sortable": True},
                {"name": "type", "label": "–¢–∏–ø", "field": "type", "sortable": True},
                {"name": "quantity", "label": "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", "field": "quantity", "sortable": True},
                {"name": "price", "label": "–¶–µ–Ω–∞", "field": "price", "sortable": True},
                {"name": "strategy", "label": "–°—Ç—Ä–∞—Ç–µ–≥–∏—è", "field": "strategy", "sortable": True},
                {"name": "date", "label": "–î–∞—Ç–∞", "field": "date", "sortable": True},
                {"name": "actions", "label": "–î–µ–π—Å—Ç–≤–∏—è", "field": "actions"},
            ]
            
            table = create_modern_table(columns, [])
            
            # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø—É—Å—Ç–æ–π —Ç–∞–±–ª–∏—Ü—ã
            with ui.row().classes("h-64 items-center justify-center"):
                ui.label("–ù–µ—Ç —Å–¥–µ–ª–æ–∫").classes("text-gray-500 text-lg")


def create_analytics_page():
    """–°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    with ui.column().classes("w-full space-y-6"):
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        ui.label("–ê–Ω–∞–ª–∏—Ç–∏–∫–∞").classes("text-3xl font-bold text-gray-800")
        
        # –ö–∞—Ä—Ç–æ—á–∫–∏ —Å –º–µ—Ç—Ä–∏–∫–∞–º–∏
        with ui.row().classes("gap-6 mb-8"):
            create_analytics_card("Sharpe Ratio", "0.00", "üìä", "primary")
            create_analytics_card("Max Drawdown", "0.00%", "üìâ", "error")
            create_analytics_card("Volatility", "0.00%", "üìà", "warning")
            create_analytics_card("Win Rate", "0.00%", "üéØ", "success")
        
        # –ì—Ä–∞—Ñ–∏–∫–∏
        with ui.row().classes("gap-6"):
            # –ì—Ä–∞—Ñ–∏–∫ PnL
            with ui.card().classes("flex-1 p-6 bg-white shadow-sm rounded-lg"):
                ui.label("PnL –ø–æ –≤—Ä–µ–º–µ–Ω–∏").classes("text-lg font-semibold text-gray-800 mb-4")
                with ui.row().classes("h-64 items-center justify-center bg-gray-50 rounded-lg"):
                    ui.label("–ì—Ä–∞—Ñ–∏–∫ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").classes("text-gray-500")
            
            # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –º–æ–Ω–µ—Ç–∞–º
            with ui.card().classes("flex-1 p-6 bg-white shadow-sm rounded-lg"):
                ui.label("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –º–æ–Ω–µ—Ç–∞–º").classes("text-lg font-semibold text-gray-800 mb-4")
                with ui.row().classes("h-64 items-center justify-center bg-gray-50 rounded-lg"):
                    ui.label("–ì—Ä–∞—Ñ–∏–∫ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ").classes("text-gray-500")


def create_portfolio_stat_card(title, value, icon, color):
    """–°–æ–∑–¥–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫—É—é –∫–∞—Ä—Ç–æ—á–∫—É –ø–æ—Ä—Ç—Ñ–µ–ª—è"""
    color_classes = {
        "primary": "bg-gradient-to-r from-indigo-500 to-purple-600",
        "success": "bg-gradient-to-r from-green-500 to-emerald-600",
        "info": "bg-gradient-to-r from-blue-500 to-cyan-600",
        "warning": "bg-gradient-to-r from-yellow-500 to-orange-600",
    }
    
    with ui.card().classes(
        f"flex-1 p-6 text-white shadow-lg rounded-lg {color_classes.get(color, color_classes['primary'])}"
    ):
        with ui.row().classes("items-center justify-between mb-3"):
            ui.label(icon).classes("text-3xl")
            ui.label(value).classes("text-2xl font-bold")
        ui.label(title).classes("text-sm opacity-90")


def create_analytics_card(title, value, icon, color):
    """–°–æ–∑–¥–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    color_classes = {
        "primary": "bg-gradient-to-r from-indigo-500 to-purple-600",
        "success": "bg-gradient-to-r from-green-500 to-emerald-600",
        "info": "bg-gradient-to-r from-blue-500 to-cyan-600",
        "warning": "bg-gradient-to-r from-yellow-500 to-orange-600",
        "error": "bg-gradient-to-r from-red-500 to-pink-600",
    }
    
    with ui.card().classes(
        f"flex-1 p-6 text-white shadow-lg rounded-lg {color_classes.get(color, color_classes['primary'])}"
    ):
        with ui.row().classes("items-center justify-between mb-3"):
            ui.label(icon).classes("text-3xl")
            ui.label(value).classes("text-2xl font-bold")
        ui.label(title).classes("text-sm opacity-90")


def open_add_transaction_dialog():
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏"""
    def content():
        with ui.column().classes("space-y-4"):
            # –§–æ—Ä–º–∞ –≤ –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏
            with ui.row().classes("gap-4"):
                with ui.column().classes("flex-1 space-y-4"):
                    coin_input = create_modern_form_field("–ú–æ–Ω–µ—Ç–∞", placeholder="BTC, ETH, SOL...")
                    type_select = create_modern_form_field("–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏", "select", options=TYPES)
                    qty_input = create_modern_form_field("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", placeholder="0.0")
                    price_input = create_modern_form_field("–¶–µ–Ω–∞ –∑–∞ –º–æ–Ω–µ—Ç—É", placeholder="0.00")
                
                with ui.column().classes("flex-1 space-y-4"):
                    strategy_select = create_modern_form_field("–°—Ç—Ä–∞—Ç–µ–≥–∏—è", "select", options=STRATS)
                    source_input = create_modern_form_field("–ò—Å—Ç–æ—á–Ω–∏–∫", placeholder="Binance, Coinbase...")
                    notes_input = create_modern_form_field("–ó–∞–º–µ—Ç–∫–∏", "textarea", placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è...")
            
            # –ö–Ω–æ–ø–∫–∏
            with ui.row().classes("justify-end space-x-3 pt-4 border-t border-gray-200"):
                with ui.button("–û—Ç–º–µ–Ω–∞").classes(
                    "bg-gray-300 hover:bg-gray-400 text-gray-700 px-6 py-2 rounded-lg"
                ):
                    pass
                with ui.button("–î–æ–±–∞–≤–∏—Ç—å", icon="add").classes(
                    "bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-2 rounded-lg"
                ):
                    create_success_toast("–°–¥–µ–ª–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
    
    dialog = create_modern_dialog("–î–æ–±–∞–≤–∏—Ç—å —Å–¥–µ–ª–∫—É", content)
    dialog.open()


def create_modern_portfolio_page():
    """–°–æ–∑–¥–∞–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Ä—Ç—Ñ–µ–ª—è"""
    with ui.column().classes("w-full h-full"):
        # –°–æ–∑–¥–∞–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –º–∞–∫–µ—Ç
        from app.ui.layout_improvements import ModernLayout
        layout = ModernLayout()
        layout.create_main_layout()
