#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Ü–µ–Ω
"""

import os
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app.adapters.prices import (
    get_current_price_fallback,
    get_price_from_binance,
    get_price_from_coinpaprika,
)


def test_fallback_sources():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Ü–µ–Ω"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–• –ò–°–¢–û–ß–ù–ò–ö–û–í –¶–ï–ù")
    print("=" * 60)

    # –¢–µ—Å—Ç–æ–≤—ã–µ –º–æ–Ω–µ—Ç—ã
    test_coins = ["LINK", "BTC", "ETH", "SOL", "ADA"]

    print(f"üìÖ –í—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"üåê –ò—Å—Ç–æ—á–Ω–∏–∫–∏: CoinGecko, Binance, CoinPaprika")
    print(f"üí∞ –í–∞–ª—é—Ç–∞: USD")
    print()

    for coin in test_coins:
        print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º {coin}...")

        # –¢–µ—Å—Ç Binance
        print(f"   üìä Binance:")
        binance_price = get_price_from_binance(coin)
        if binance_price:
            print(f"      ‚úÖ ${binance_price:,.2f}")
        else:
            print(f"      ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ")

        # –¢–µ—Å—Ç CoinPaprika
        print(f"   üìä CoinPaprika:")
        paprika_price = get_price_from_coinpaprika(coin)
        if paprika_price:
            print(f"      ‚úÖ ${paprika_price:,.2f}")
        else:
            print(f"      ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ")

        # –¢–µ—Å—Ç Fallback (–≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏)
        print(f"   üìä Fallback (–≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏):")
        fallback_price = get_current_price_fallback(coin)
        if fallback_price:
            print(f"      ‚úÖ ${fallback_price:,.2f}")
        else:
            print(f"      ‚ùå –í—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")

        print()

    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


if __name__ == "__main__":
    test_fallback_sources()
