#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ª–∞—É–Ω—á–µ—Ä –¥–ª—è Crypto Portfolio Manager
–†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å Python –∏–∑ Microsoft Store
"""

import sys
import os
import subprocess
import time
import webbrowser
import threading
from pathlib import Path

def print_status(message, status="info"):
    """–ü–µ—á–∞—Ç–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Å —ç–º–æ–¥–∑–∏"""
    icons = {
        "info": "‚ÑπÔ∏è",
        "success": "‚úÖ", 
        "error": "‚ùå",
        "warning": "‚ö†Ô∏è",
        "loading": "üîÑ"
    }
    print(f"{icons.get(status, '‚ÑπÔ∏è')} {message}")

def check_python():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç Python –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    print_status("–ü—Ä–æ–≤–µ—Ä—è–µ–º Python...", "loading")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python
        version = sys.version_info
        if version.major < 3 or (version.major == 3 and version.minor < 8):
            print_status(f"–¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8+, —Ç–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: {version.major}.{version.minor}", "error")
            return False
        
        print_status(f"Python {version.major}.{version.minor}.{version.micro} - OK", "success")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        required_modules = ['nicegui', 'sqlmodel', 'httpx', 'pydantic']
        for module in required_modules:
            try:
                __import__(module)
                print_status(f"{module} - OK", "success")
            except ImportError:
                print_status(f"{module} - –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù", "error")
                return False
        
        return True
        
    except Exception as e:
        print_status(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Python: {e}", "error")
        return False

def check_app_modules():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–æ–¥—É–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print_status("–ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥—É–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...", "loading")
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
        current_dir = Path(__file__).parent
        sys.path.insert(0, str(current_dir))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
        from app.core.version import get_app_info
        from app.storage.db import init_db
        from app.core.models import Transaction
        from app.core.services import add_transaction
        from app.adapters.prices import get_current_price
        
        print_status("–í—Å–µ –º–æ–¥—É–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è - OK", "success")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
        app_info = get_app_info()
        print_status(f"–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {app_info['name']} v{app_info['version']}", "info")
        
        return True
        
    except Exception as e:
        print_status(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π: {e}", "error")
        return False

def init_database():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    print_status("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...", "loading")
    
    try:
        from app.storage.db import init_db
        init_db()
        print_status("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞", "success")
        return True
    except Exception as e:
        print_status(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}", "error")
        return False

def open_browser_delayed():
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π"""
    time.sleep(3)
    try:
        webbrowser.open('http://127.0.0.1:8080')
        print_status("–ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç: http://127.0.0.1:8080", "success")
    except Exception as e:
        print_status(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä: {e}", "warning")

def launch_app():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    print_status("–ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...", "loading")
    
    try:
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        browser_thread = threading.Thread(target=open_browser_delayed)
        browser_thread.daemon = True
        browser_thread.start()
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        from app.main import main as app_main
        app_main()
        
    except KeyboardInterrupt:
        print_status("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", "info")
    except Exception as e:
        print_status(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {e}", "error")
        import traceback
        traceback.print_exc()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ Crypto Portfolio Manager - –õ–∞—É–Ω—á–µ—Ä")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    if not check_python():
        print_status("–ü—Ä–æ–≤–µ—Ä–∫–∞ Python –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞", "error")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return 1
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥—É–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if not check_app_modules():
        print_status("–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª–µ–π –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞", "error")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return 1
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if not init_database():
        print_status("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞", "error")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return 1
    
    print("\n" + "=" * 50)
    print_status("–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...", "success")
    print("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    try:
        launch_app()
    except Exception as e:
        print_status(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}", "error")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return 1
    
    return 0

if __name__ == "__main__":
    sys.exit(main())
