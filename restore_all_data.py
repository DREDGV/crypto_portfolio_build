#!/usr/bin/env python3
"""–ü–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö"""


def restore_all_data():
    """–ü–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ"""
    print("üöÄ –ü–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...")

    try:
        from datetime import datetime, timedelta

        from sqlmodel import Session

        from app.core.models import TransactionIn
        from app.core.services import add_transaction
        from app.models.broker_models import Broker, StockInstrument, StockTransactionIn
        from app.services.broker_service import StockService
        from app.storage.db import engine, init_db

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
        init_db()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")

        # –î–æ–±–∞–≤–ª—è–µ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        print("\nüîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...")
        crypto_transactions = [
            TransactionIn(
                coin="BTC",
                type="buy",
                quantity=0.1,
                price=45000.00,
                source="Binance",
                strategy="long",
                notes="–ü–æ–∫—É–ø–∫–∞ Bitcoin",
            ),
            TransactionIn(
                coin="ETH",
                type="buy",
                quantity=2.0,
                price=3000.00,
                source="Coinbase",
                strategy="long",
                notes="–ü–æ–∫—É–ø–∫–∞ Ethereum",
            ),
            TransactionIn(
                coin="SOL",
                type="buy",
                quantity=50.0,
                price=100.00,
                source="Binance",
                strategy="long",
                notes="–ü–æ–∫—É–ø–∫–∞ Solana",
            ),
            TransactionIn(
                coin="ADA",
                type="buy",
                quantity=1000.0,
                price=0.50,
                source="Kraken",
                strategy="long",
                notes="–ü–æ–∫—É–ø–∫–∞ Cardano",
            ),
            TransactionIn(
                coin="DOT",
                type="buy",
                quantity=100.0,
                price=25.00,
                source="Binance",
                strategy="long",
                notes="–ü–æ–∫—É–ø–∫–∞ Polkadot",
            ),
        ]

        crypto_added = 0
        for tx in crypto_transactions:
            try:
                success = add_transaction(tx)
                if success:
                    crypto_added += 1
                    print(f"‚úÖ –ö—Ä–∏–ø—Ç–æ: {tx.coin}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –∫—Ä–∏–ø—Ç–æ: {tx.coin}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∫—Ä–∏–ø—Ç–æ {tx.coin}: {e}")

        # –î–æ–±–∞–≤–ª—è–µ–º –±—Ä–æ–∫–µ—Ä–∞ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∞–∫—Ü–∏–π
        print("\nüîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π...")

        # –ë—Ä–æ–∫–µ—Ä
        tinkoff_broker = Broker(
            id="tinkoff",
            name="–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏",
            api_url="https://invest-public-api.tinkoff.ru/rest",
            is_active=True,
            description="–†–æ—Å—Å–∏–π—Å–∫–∏–π –±—Ä–æ–∫–µ—Ä –¢–∏–Ω—å–∫–æ—Ñ—Ñ",
        )

        with Session(engine) as session:
            # –î–æ–±–∞–≤–ª—è–µ–º –±—Ä–æ–∫–µ—Ä–∞
            existing_broker = session.get(Broker, "tinkoff")
            if not existing_broker:
                session.add(tinkoff_broker)
                session.commit()
                print("‚úÖ –ë—Ä–æ–∫–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω")
            else:
                print("‚ÑπÔ∏è –ë—Ä–æ–∫–µ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
            instruments_data = [
                {
                    "ticker": "SBER",
                    "name": "–°–±–µ—Ä–±–∞–Ω–∫",
                    "sector": "–§–∏–Ω–∞–Ω—Å—ã",
                    "lot_size": 10,
                    "currency": "RUB",
                },
                {
                    "ticker": "GAZP",
                    "name": "–ì–∞–∑–ø—Ä–æ–º",
                    "sector": "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞",
                    "lot_size": 10,
                    "currency": "RUB",
                },
                {
                    "ticker": "LKOH",
                    "name": "–õ—É–∫–æ–π–ª",
                    "sector": "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞",
                    "lot_size": 1,
                    "currency": "RUB",
                },
                {
                    "ticker": "YNDX",
                    "name": "–Ø–Ω–¥–µ–∫—Å",
                    "sector": "IT",
                    "lot_size": 1,
                    "currency": "RUB",
                },
                {
                    "ticker": "NVTK",
                    "name": "–ù–æ–≤–∞—Ç—ç–∫",
                    "sector": "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞",
                    "lot_size": 1,
                    "currency": "RUB",
                },
                {
                    "ticker": "ROSN",
                    "name": "–†–æ—Å–Ω–µ—Ñ—Ç—å",
                    "sector": "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞",
                    "lot_size": 1,
                    "currency": "RUB",
                },
                {
                    "ticker": "NLMK",
                    "name": "–ù–õ–ú–ö",
                    "sector": "–ú–µ—Ç–∞–ª–ª—É—Ä–≥–∏—è",
                    "lot_size": 1,
                    "currency": "RUB",
                },
                {
                    "ticker": "MAGN",
                    "name": "–ú–∞–≥–Ω–∏—Ç–æ–≥–æ—Ä—Å–∫–∏–π –º–µ—Ç–∞–ª–ª—É—Ä–≥–∏—á–µ—Å–∫–∏–π –∫–æ–º–±–∏–Ω–∞—Ç",
                    "sector": "–ú–µ—Ç–∞–ª–ª—É—Ä–≥–∏—è",
                    "lot_size": 1,
                    "currency": "RUB",
                },
                {
                    "ticker": "CHMF",
                    "name": "–°–µ–≤–µ—Ä—Å—Ç–∞–ª—å",
                    "sector": "–ú–µ—Ç–∞–ª–ª—É—Ä–≥–∏—è",
                    "lot_size": 1,
                    "currency": "RUB",
                },
                {
                    "ticker": "PLZL",
                    "name": "–ü–æ–ª—é—Å",
                    "sector": "–ó–æ–ª–æ—Ç–æ–¥–æ–±—ã—á–∞",
                    "lot_size": 1,
                    "currency": "RUB",
                },
                {
                    "ticker": "TATN",
                    "name": "–¢–∞—Ç–Ω–µ—Ñ—Ç—å",
                    "sector": "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞",
                    "lot_size": 1,
                    "currency": "RUB",
                },
                {
                    "ticker": "OZON",
                    "name": "–û–∑–æ–Ω",
                    "sector": "E-commerce",
                    "lot_size": 1,
                    "currency": "RUB",
                },
                {
                    "ticker": "QIWI",
                    "name": "–ö–∏–≤–∏",
                    "sector": "–§–∏–Ω–∞–Ω—Å—ã",
                    "lot_size": 1,
                    "currency": "RUB",
                },
                {
                    "ticker": "VKCO",
                    "name": "VK",
                    "sector": "IT",
                    "lot_size": 1,
                    "currency": "RUB",
                },
                {
                    "ticker": "AFLT",
                    "name": "–ê—ç—Ä–æ—Ñ–ª–æ—Ç",
                    "sector": "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
                    "lot_size": 10,
                    "currency": "RUB",
                },
                {
                    "ticker": "SMLT",
                    "name": "–°–∞–º–æ–ª–µ—Ç",
                    "sector": "–î–µ–≤–µ–ª–æ–ø–º–µ–Ω—Ç",
                    "lot_size": 1,
                    "currency": "RUB",
                },
                {
                    "ticker": "MGNT",
                    "name": "–ú–∞–≥–Ω–∏—Ç",
                    "sector": "–†–∏—Ç–µ–π–ª",
                    "lot_size": 1,
                    "currency": "RUB",
                },
                {
                    "ticker": "MOEX",
                    "name": "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –ë–∏—Ä–∂–∞",
                    "sector": "–§–∏–Ω–∞–Ω—Å—ã",
                    "lot_size": 1,
                    "currency": "RUB",
                },
                {
                    "ticker": "FIVE",
                    "name": "X5 Group",
                    "sector": "–†–∏—Ç–µ–π–ª",
                    "lot_size": 1,
                    "currency": "RUB",
                },
                {
                    "ticker": "TRNFP",
                    "name": "–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å",
                    "sector": "–≠–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞",
                    "lot_size": 1,
                    "currency": "RUB",
                },
            ]

            instruments_added = 0
            for data in instruments_data:
                instrument = StockInstrument(broker_id="tinkoff", **data)
                session.add(instrument)
                instruments_added += 1

            session.commit()
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {instruments_added} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤")

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∞–∫—Ü–∏–π
        print("\nüîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∞–∫—Ü–∏–π...")
        stock_service = StockService()

        stock_transactions = [
            StockTransactionIn(
                ticker="SBER",
                broker_id="tinkoff",
                quantity=10,
                price=250.50,
                commission=25.05,
                transaction_type="buy",
                transaction_date=datetime.now() - timedelta(days=30),
            ),
            StockTransactionIn(
                ticker="GAZP",
                broker_id="tinkoff",
                quantity=50,
                price=180.25,
                commission=90.13,
                transaction_type="buy",
                transaction_date=datetime.now() - timedelta(days=20),
            ),
            StockTransactionIn(
                ticker="LKOH",
                broker_id="tinkoff",
                quantity=5,
                price=4500.00,
                commission=225.00,
                transaction_type="buy",
                transaction_date=datetime.now() - timedelta(days=10),
            ),
            StockTransactionIn(
                ticker="YNDX",
                broker_id="tinkoff",
                quantity=2,
                price=3200.75,
                commission=64.02,
                transaction_type="buy",
                transaction_date=datetime.now() - timedelta(days=5),
            ),
        ]

        stock_added = 0
        for tx in stock_transactions:
            try:
                success = stock_service.add_stock_transaction(tx)
                if success:
                    stock_added += 1
                    print(f"‚úÖ –ê–∫—Ü–∏—è: {tx.ticker}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ü–∏–∏: {tx.ticker}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ü–∏–∏ {tx.ticker}: {e}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...")
        from app.core.services import get_portfolio_stats

        stats = get_portfolio_stats()

        positions = stock_service.calculate_stock_positions()

        print(f"   üìà –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {crypto_added}")
        print(f"   üìà –ü–æ–∑–∏—Ü–∏–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç: {len(stats.get('positions', []))}")
        print(f"   üìà –í—Å–µ–≥–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {stats.get('total_transactions', 0)}")
        print(f"   üìà –ü–æ–∑–∏—Ü–∏–π –∞–∫—Ü–∏–π: {len(positions)}")
        print(f"   üìà –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –∞–∫—Ü–∏–π: {stock_added}")

        print("\nüéâ –í–°–ï –î–ê–ù–ù–´–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–´!")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: {e}")
        import traceback

        traceback.print_exc()
        return False


if __name__ == "__main__":
    restore_all_data()
